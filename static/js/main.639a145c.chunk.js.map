{"version":3,"sources":["FlagIcon.js","RadarChart.jsx","Contact.tsx","links.ts","Education.tsx","Experience.tsx","Personality.tsx","TagCloud.jsx","Profile.tsx","App.jsx","serviceWorker.ts","index.tsx"],"names":["FlagIconFactory","React","useCssModules","HighchartsMore","Highcharts","useStyles","makeStyles","t","createStyles","avatar","height","width","chartsContainer","padding","spacing","overflow","language","cursor","name","paddingBottom","personality","popover","marginTop","linkIcons","GitHub","FaGithub","Instapaper","FaNewspaper","LinkedIn","FaLinkedin","PDF","FaFilePdf","Personality","FaUser","Pinboard","FaThumbtack","StackOverflow","FaStackOverflow","ContactView","props","classes","contact","popoverAnchor","setPopoverAnchor","useState","_jsxs","Grid","container","justify","children","_jsx","item","direction","Typography","className","variant","Object","entries","links","map","_ref","key","value","Icon","Tooltip","title","Link","href","color","target","rel","size","alignItems","languages","level","FlagIcon","code","concat","email","theme","bold","fontWeight","EducationView","education","institution","country","year","root","parseMonthYear","mmYYYY","separator","arguments","length","undefined","indexOf","format","Date","month","split","parseInt","ExperienceView","experience","duration","period","fromDate","toDate","periodString","join","diffInMonths","differenceInMonths","years","Math","floor","months","formatDuration","formatPeriod","xs","Divider","company","location","description","idx","gutterBottom","component","Hidden","only","md","technologies","Chip","label","onClick","url","window","open","traits","edges","link","trait","palette","text","secondary","PersonalityView","e1","e2","leftColor","rightColor","ProgressBar","withStyles","bar","backgroundColor","colorPrimary","borderRadius","LinearProgress","style","textAlign","skills","TagCloudView","WordCloud","data","reverse","font","fontSizeMapper","word","log2","onWordClick","rotate","random","MS_PER_DAY","ProfileView","resume","summary","forEach","test","since","then","utc1","UTC","getFullYear","getMonth","getDate","utc2","diffInDays","ceil","getDiffInYears","replace","Paper","Contact","lg","Experience","Education","TagCloud","printButton","margin","printContainer","marginBottom","App","ThemeProvider","responsiveFontSizes","createMuiTheme","CssBaseline","Container","maxWidth","Profile","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.639a145c.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport FlagIconFactory from \"react-flag-icon-css\";\n\nexport default FlagIconFactory(React, { useCssModules: false });\n","import Highcharts from \"highcharts\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nHighchartsMore(Highcharts);\n\nconst skills = [\n    { category: \"Algorithms\", score: 2.5 },\n    { category: \"Architecture\", score: 4.5 },\n    { category: \"Databases\", score: 3.5 },\n    { category: \"Frameworks\", score: 4.5 },\n    { category: \"Infrastructure\", score: 3.0 },\n    { category: \"Mobile\", score: 2.5 },\n    { category: \"UI/UX\", score: 4.0 },\n    { category: \"Web\", score: 4.5 },\n];\n\nexport default function RadarChartView() {\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={{\n                chart: {\n                    height: 280,\n                    polar: true,\n                    type: \"line\",\n                    width: 360,\n                },\n                title: {\n                    text: null,\n                    x: 0,\n                },\n                xAxis: {\n                    categories: skills.map((s) => s.category),\n                    labels: {\n                        style: {\n                            color: \"#222\",\n                        },\n                    },\n                    gridLineColor: \"#ccc\",\n                    tickmarkPlacement: \"on\",\n                    lineWidth: 0,\n                },\n                yAxis: {\n                    gridLineColor: \"#ccc\",\n                    gridLineInterpolation: \"polygon\",\n                    lineWidth: 0,\n                    max: 5,\n                    min: 0,\n                    labels: {\n                        enabled: false,\n                    },\n                },\n                series: [\n                    {\n                        name: \"Skills\",\n                        data: skills.map((s) => s.score),\n                        pointPlacement: \"on\",\n                    },\n                ],\n                plotOptions: {\n                    series: {\n                        tooltip: {\n                            pointFormatter: function () {\n                                const value = this.y;\n                                console.log(this);\n                                let rank = \"N/A\";\n                                if (value <= 1) {\n                                    rank = \"Learning\";\n                                } else if (value <= 2) {\n                                    rank = \"Beginner\";\n                                } else if (value <= 3) {\n                                    rank = \"Intermediate\";\n                                } else if (value <= 4) {\n                                    rank = \"Advanced\";\n                                } else {\n                                    rank = \"Expert\";\n                                }\n                                return `<b>${rank}</b>`;\n                            },\n                        },\n                    },\n                },\n                legend: {\n                    enabled: false,\n                },\n                tooltip: {\n                    enabled: false,\n                },\n                credits: {\n                    enabled: false,\n                },\n                exporting: {\n                    enabled: false,\n                },\n            }}\n        />\n    );\n}\n","import React from \"react\";\n\nimport { Avatar, Grid, Hidden, Link, Popover, Tooltip, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { IconType } from \"react-icons\";\nimport { FaFilePdf, FaGithub, FaLinkedin, FaNewspaper, FaStackOverflow, FaThumbtack, FaUser } from \"react-icons/fa\";\n\nimport { Contact } from \"./data\";\nimport FlagIcon from \"./FlagIcon\";\nimport RadarChart from \"./RadarChart\";\n\nconst useStyles = makeStyles((t: Theme) =>\n    createStyles({\n        avatar: {\n            height: 56,\n            width: 56,\n        },\n        chartsContainer: {\n            padding: t.spacing(1),\n            overflow: \"hidden\",\n        },\n        language: {\n            cursor: \"pointer\",\n            padding: t.spacing(1),\n        },\n        name: {\n            paddingBottom: t.spacing(0.5),\n        },\n        personality: {\n            height: 21,\n            width: 21,\n        },\n        popover: {\n            marginTop: t.spacing(2),\n        },\n    })\n);\n\nconst linkIcons: { [key: string]: IconType } = {\n    GitHub: FaGithub,\n    Instapaper: FaNewspaper,\n    LinkedIn: FaLinkedin,\n    PDF: FaFilePdf,\n    Personality: FaUser,\n    Pinboard: FaThumbtack,\n    StackOverflow: FaStackOverflow,\n};\n\ninterface Props {\n    contact: Contact;\n}\n\nexport default function ContactView(props: Props) {\n    const classes = useStyles(props);\n    const { contact } = props;\n\n    const [popoverAnchor, setPopoverAnchor] = React.useState(null);\n\n    return (\n        <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item>\n                <Grid container spacing={2}>\n                    {false && (\n                        <Hidden only={[\"xs\"]}>\n                            <Grid item>\n                                <Avatar\n                                    alt={contact.name}\n                                    className={classes.avatar}\n                                    onMouseEnter={(event: any) => {\n                                        setPopoverAnchor(event.currentTarget);\n                                    }}\n                                    src=\"/logo.png\"\n                                />\n                                {false && (\n                                    <Popover\n                                        anchorEl={popoverAnchor}\n                                        anchorOrigin={{\n                                            horizontal: \"left\",\n                                            vertical: \"bottom\",\n                                        }}\n                                        className={classes.popover}\n                                        onClose={() => setPopoverAnchor(null)}\n                                        open={Boolean(popoverAnchor)}\n                                        transformOrigin={{\n                                            horizontal: \"left\",\n                                            vertical: \"top\",\n                                        }}\n                                    >\n                                        <Grid container className={classes.chartsContainer} spacing={1}>\n                                            <Grid item>\n                                                <RadarChart />\n                                            </Grid>\n                                        </Grid>\n                                    </Popover>\n                                )}\n                            </Grid>\n                        </Hidden>\n                    )}\n                    <Grid item>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Typography className={classes.name} variant=\"h5\">\n                                    {contact.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container spacing={1}>\n                                    {Object.entries(contact.links).map(([key, value]) => {\n                                        const Icon = linkIcons[key];\n                                        return (\n                                            <Grid item key={key}>\n                                                <Tooltip title={key}>\n                                                    <Link\n                                                        href={value}\n                                                        color=\"textSecondary\"\n                                                        variant=\"body2\"\n                                                        target=\"_blank\"\n                                                        rel=\"noopener\"\n                                                    >\n                                                        <Icon size=\"1.5em\" />\n                                                    </Link>\n                                                </Tooltip>\n                                            </Grid>\n                                        );\n                                    })}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"flex-end\" spacing={1}>\n                    <Grid item>\n                        {contact.languages.map((item) => (\n                            <Tooltip key={item.code} title={item.level}>\n                                <span className={classes.language}>\n                                    <FlagIcon code={item.code} size=\"lg\" />\n                                </span>\n                            </Tooltip>\n                        ))}\n                    </Grid>\n                    <Grid item>\n                        <Link href={`mailto:${contact.email}`} variant=\"body2\" target=\"_blank\" rel=\"noopener\">\n                            {contact.email}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","const links: { [key: string]: string } = {\n    \"Amadeus IT Group S.A.\": \"https://www.amadeus.com\",\n    \"Android\": \"https://www.android.com\",\n    \"Ansible\": \"https://ansible.com\",\n    \"Ant\": \"https://ant.apache.org\",\n    \"Atech S/A\": \"https://www.atech.com.br\",\n    \"Audatex GmbH\": \"https://www.audatex.com\",\n    \"AWS\": \"https://aws.amazon.com\",\n    \"Azure\": \"http://azure.microsoft.com\",\n    \"Backbone\": \"https://backbonejs.org\",\n    \"Backstage\": \"https://backstage.io\",\n    \"Celery\": \"http://www.celeryproject.org\",\n    \"Clarity Design\": \"https://clarity.design\",\n    \"Concourse\": \"https://concourse-ci.org\",\n    \"Cypress\": \"https://cypress.io\",\n    \"D3\": \"https://d3js.org\",\n    \"Dotdash Inc.\": \"https://dotdash.com\",\n    \"Django\": \"https://djangoproject.com\",\n    \"Docker\": \"https://docker.com\",\n    \"Drools\": \"https://www.drools.org\",\n    \"EJB\": \"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\",\n    \"Elasticsearch\": \"https://elastic.co/products/elasticsearch\",\n    \"European Innovation Academy S.A.\": \"https://www.inacademy.eu\",\n    \"GCP\": \"https://cloud.google.com/gcp\",\n    \"Go\": \"https://golang.org\",\n    \"Gradle\": \"https://gradle.org\",\n    \"Grails\": \"https://grails.org\",\n    \"GraphQL\": \"https://graphql.org\",\n    \"Groovy\": \"https://groovy-lang.org\",\n    \"GWT\": \"https://www.gwtproject.org\",\n    \"Hibernate\": \"https://hibernate.org\",\n    \"Hive\": \"https://hive.apache.org\",\n    \"HP Inc.\": \"https://www8.hp.com/us/en/home.html\",\n    \"iOS\": \"https://developer.apple.com/ios\",\n    \"Keycloak\": \"https://www.keycloak.org\",\n    \"Kotlin\": \"https://kotlinlang.org\",\n    \"Kubernetes\": \"https://kubernetes.io\",\n    \"Java\": \"https://www.java.com\",\n    \"JavaScript\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\n    \"JBoss\": \"https://wildfly.org\",\n    \"Jenkins\": \"https://www.jenkins.io\",\n    \"JiBX\": \"http://jibx.sourceforge.net\",\n    \"JRuby\": \"https://www.jruby.org\",\n    \"Jython\": \"https://www.jython.org\",\n    \"Logstash\": \"https://elastic.co/products/logstash\",\n    \"Marionette\": \"https://marionettejs.com\",\n    \"Maven\": \"https://maven.apache.org\",\n    \"Memcached\": \"https://memcached.org\",\n    \"MongoDB\": \"https://mongodb.com\",\n    \"MySQL\": \"https://mysql.com\",\n    \"Node.js\": \"https://nodejs.org\",\n    \"Nginx\": \"https://nginx.com\",\n    \"Objective-C\": \"https://en.wikipedia.org/wiki/Objective-C\",\n    \"OC4J\": \"https://docs.oracle.com/cd/B14099_19/web.1012/b14011/chap1.htm\",\n    \"OpenMap\": \"http://openmap-java.org\",\n    \"Oracle9i\": \"https://docs.oracle.com/cd/B10501_01/server.920/a96531/ch1_over.htm\",\n    \"Pontifical Catholic University of São Paulo\": \"http://www.pucsp.br/home\",\n    \"PostgreSQL\": \"https://postgresql.org\",\n    \"Play\": \"https://www.playframework.com\",\n    \"Python\": \"https://python.org\",\n    \"Rails\": \"https://rubyonrails.org\",\n    \"React\": \"https://reactjs.org\",\n    \"Redis\": \"https://redis.io\",\n    \"Ruby\": \"https://www.ruby-lang.org\",\n    \"Scala\": \"https://www.scala-lang.org\",\n    \"Sentry\": \"https://sentry.io\",\n    \"Spark\": \"https://spark.apache.org\",\n    \"Spring\": \"https://spring.io\",\n    \"SQL Server\": \"https://www.microsoft.com/en-us/sql-server/sql-server-downloads\",\n    \"State University of Campinas\": \"https://www.unicamp.br/unicamp\",\n    \"Struts\": \"https://struts.apache.org\",\n    \"Swift\": \"https://swift.org/documentation\",\n    \"Swing\": \"https://en.wikipedia.org/wiki/Swing_(Java)\",\n    \"Tanzu\": \"https://tanzu.vmware.com\",\n    \"Tamino XML Server\": \"https://en.wikipedia.org/wiki/Software_AG\",\n    \"Tomcat\": \"http://tomcat.apache.org\",\n    \"Telefonica S.A.\": \"https://telefonica.com\",\n    \"TypeScript\": \"https://www.typescriptlang.org\",\n    \"VMware Inc.\": \"https://vmware.com\",\n    \"Vue\": \"https://vuejs.org\",\n    \"WebLogic\": \"https://www.oracle.com/middleware/technologies/weblogic.html\",\n};\n\nexport default links;\n","import { Grid, Link, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { Education } from \"./data\";\nimport links from \"./links\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        bold: {\n            fontWeight: 500,\n        },\n    })\n);\n\ninterface Props {\n    education: Education;\n}\n\nexport default function EducationView(props: Props) {\n    const classes = useStyles(props);\n    const { education } = props;\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <Typography className={classes.bold}>{education.title}</Typography>\n            </Grid>\n            <Grid item>\n                <Typography className={classes.bold}>–</Typography>\n            </Grid>\n            <Grid item>\n                <Link href={links[education.institution]} target=\"_blank\" rel=\"noopener\">\n                    <Typography className={classes.bold}>{education.institution}</Typography>\n                </Link>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"body1\">\n                    {education.country}, {education.year}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n","import { Chip, Divider, Grid, Hidden, Link, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { format, formatDuration, differenceInMonths } from \"date-fns\";\nimport { Experience } from \"./data\";\nimport links from \"./links\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        bold: {\n            fontWeight: 500,\n        },\n        root: {\n            paddingBottom: theme.spacing(2),\n        },\n    })\n);\n\ninterface Props {\n    experience: Experience;\n}\n\nexport function parseMonthYear(mmYYYY: string, separator: string = \"/\") {\n    if (mmYYYY.indexOf(separator) === -1) {\n        mmYYYY = format(new Date(), \"MM/yyyy\");\n    }\n    const [month, year] = mmYYYY.split(separator);\n    return new Date(parseInt(year), parseInt(month), 1);\n}\n\nexport function formatPeriod(period: string[]) {\n    const fromDate = parseMonthYear(period[0]);\n    const toDate = parseMonthYear(period[1]);\n    const periodString = period.join(\" – \");\n\n    const diffInMonths = differenceInMonths(toDate, fromDate) + 1; // Include the last month.\n    const years = Math.floor(diffInMonths / 12);\n    const months = diffInMonths % 12;\n    const duration = formatDuration({ months, years }, { format: [\"years\", \"months\"] });\n    return { duration, period: periodString };\n}\n\nexport default function ExperienceView(props: Props) {\n    const classes = useStyles(props);\n    const { experience } = props;\n    const { duration, period } = formatPeriod(experience.period);\n\n    return (\n        <Grid container className={classes.root} spacing={1}>\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Typography className={classes.bold}>{experience.title}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.bold}>–</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Link href={links[experience.company]} target=\"_blank\" rel=\"noopener\">\n                            <Typography className={classes.bold}>{experience.company}</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{experience.location}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{period}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.bold}>•</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{duration}</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {experience.description.length > 0 && (\n                <Grid item xs={12}>\n                    {experience.description.map((item, idx) => (\n                        <Typography gutterBottom key={idx} variant=\"body1\" component=\"li\">\n                            {item}\n                        </Typography>\n                    ))}\n                </Grid>\n            )}\n            <Hidden only={[\"xs\"]}>\n                <Grid item md={12}>\n                    <Grid container spacing={1}>\n                        {experience.technologies.map((item, idx) => (\n                            <Grid item key={idx}>\n                                <Chip\n                                    label={item}\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onClick={() => {\n                                        const url = links[item];\n                                        window.open(url, \"_blank\");\n                                    }}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme, withStyles } from \"@material-ui/core/styles\";\n\nconst traits = [\n    {\n        name: \"Mind\",\n        description: \"how we interact with our environment.\",\n        edges: [\n            { label: \"Extraverted\", value: 64 },\n            { label: \"Intraverted\", value: 36 },\n        ],\n        link: \"https://www.16personalities.com/articles/mind-introverted-vs-extraverted\",\n    },\n    {\n        name: \"Energy\",\n        description: \"where we direct our mental energy.\",\n        edges: [\n            { label: \"Intuitive\", value: 40 },\n            { label: \"Observant\", value: 60 },\n        ],\n        link: \"https://www.16personalities.com/articles/energy-intuitive-vs-observant\",\n    },\n    {\n        name: \"Nature\",\n        description: \"how we make decisions and cope with emotions.\",\n        edges: [\n            { label: \"Thinking\", value: 59 },\n            { label: \"Feeling\", value: 41 },\n        ],\n        link: \"https://www.16personalities.com/articles/nature-thinking-vs-feeling\",\n    },\n    {\n        name: \"Tactics\",\n        description: \"our approach to work, planning and decision-making.\",\n        edges: [\n            { label: \"Judging\", value: 82 },\n            { label: \"Prospecting\", value: 18 },\n        ],\n        link: \"https://www.16personalities.com/articles/tactics-judging-vs-prospecting\",\n    },\n    {\n        name: \"Identity\",\n        description: \"how confident we are in our abilities and decisions.\",\n        edges: [\n            { label: \"Assertive\", value: 89 },\n            { label: \"Turbulent\", value: 11 },\n        ],\n        link: \"https://www.16personalities.com/articles/identity-assertive-vs-turbulent\",\n    },\n];\n\nconst useStyles = makeStyles((t: Theme) =>\n    createStyles({\n        trait: {\n            color: t.palette.text.secondary,\n            paddingBottom: t.spacing(0.25),\n        },\n    })\n);\n\ninterface Props {}\n\nexport default function PersonalityView(props: Props) {\n    const classes = useStyles(props);\n\n    return (\n        <div>\n            {traits.map(({ description, edges, link, name }, idx) => {\n                const [e1, e2] = edges;\n                let [leftColor, rightColor] = [\"#f0f0f0\", \"#008adb\"];\n\n                if (e1.value > e2.value) {\n                    [leftColor, rightColor] = [rightColor, leftColor];\n                }\n                const ProgressBar = withStyles((t: Theme) => {\n                    return createStyles({\n                        bar: {\n                            backgroundColor: leftColor,\n                        },\n                        colorPrimary: {\n                            backgroundColor: rightColor,\n                        },\n                        root: {\n                            borderRadius: t.spacing(2.5),\n                            height: 20,\n                        },\n                    });\n                })(LinearProgress);\n\n                return (\n                    <Grid key={idx} container className={classes.trait} spacing={2}>\n                        <Grid item xs={3} style={{ textAlign: \"right\" }}>\n                            {edges[0].label} {e1.value}%\n                        </Grid>\n                        <Grid item xs={6} style={{ cursor: \"pointer\" }} onClick={() => window.open(link, \"_blank\")}>\n                            <Tooltip title={`${name}: ${description}`}>\n                                <ProgressBar variant=\"determinate\" value={e1.value} />\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs={3}>\n                            {e2.value}% {edges[1].label}\n                        </Grid>\n                    </Grid>\n                );\n            })}\n        </div>\n    );\n}\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport WordCloud from \"react-d3-cloud\";\n\nimport links from \"./links\";\n\nconst skills = [\n    // Languages\n    \"Python\",\n    \"TypeScript\",\n    \"JavaScript\",\n    \"Groovy\",\n    \"Kotlin\",\n    \"Java\",\n    \"Go\",\n    \"Objective-C\",\n    \"Swift\",\n    \"Ruby\",\n\n    // Frameworks\n    \"Django\",\n    \"React\",\n    \"Celery\",\n    \"Spring\",\n    \"GraphQL\",\n    \"Vue\",\n    \"Node.js\",\n    \"Hibernate\",\n    \"Rails\",\n\n    // Platforms & Tools\n    \"PostgreSQL\",\n    \"Redis\",\n    \"Memcached\",\n    \"Kubernetes\",\n    \"Docker\",\n    \"Nginx\",\n    \"AWS\",\n    \"GCP\",\n    \"iOS\",\n    \"Android\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Jenkins\",\n    \"Cypress\",\n    \"Keycloak\",\n    \"Ansible\",\n    \"Gradle\",\n    \"Maven\",\n];\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            \"& text\": {\n                cursor: \"pointer\",\n            },\n        },\n    })\n);\n\nexport default function TagCloudView(props) {\n    const classes = useStyles(props);\n\n    return (\n        <div className={classes.root}>\n            <WordCloud\n                data={skills.reverse().map((item, idx) => {\n                    return {\n                        text: item,\n                        value: idx + 1,\n                    };\n                })}\n                height={300}\n                font=\"Impact\"\n                fontSizeMapper={(word) => Math.log2(word.value) * 8}\n                padding={2}\n                onWordClick={(word) => {\n                    const link = links[word.text];\n                    if (link) {\n                        window.open(link, \"_blank\");\n                    }\n                }}\n                rotate={(word) => ~~(Math.random() * 2) * 90}\n            />\n        </div>\n    );\n}\n","import { Divider, Grid, Hidden, Paper, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { Resume } from \"./data\";\n\nimport Contact from \"./Contact\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport Personality from \"./Personality\";\nimport TagCloud from \"./TagCloud\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: theme.spacing(3),\n        },\n    })\n);\n\n// const icons = {\n//     summary: [\"👨🏻‍✈️\", \"👷🏻‍♂️\", \"🧙🏻‍♂️\", \"👨🏻‍🎨\", \"👨🏻‍💻\"],\n// };\n\ninterface Props {\n    resume: Resume;\n}\n\nconst DT_STARTED_CAREER = \"2003-01-01\";\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nfunction getDiffInYears(since: Date, then?: Date) {\n    then = then || new Date();\n    const utc1 = Date.UTC(since.getFullYear(), since.getMonth(), since.getDate());\n    const utc2 = Date.UTC(then.getFullYear(), then.getMonth(), then.getDate());\n    const diffInDays = Math.floor((utc2 - utc1) / MS_PER_DAY);\n    return Math.ceil(diffInDays / 365);\n}\n\nexport default function ProfileView(props: Props) {\n    const classes = useStyles(props);\n\n    const { resume } = props;\n\n    resume.summary.forEach((item, idx) => {\n        if (/N\\+/.test(item)) {\n            const years = getDiffInYears(new Date(DT_STARTED_CAREER));\n            resume.summary[idx] = item.replace(\"N+\", `${years}+`);\n        }\n    });\n    return (\n        <Paper className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Contact contact={resume.contact} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container justify=\"space-between\" spacing={2}>\n                        <Grid item lg={7}>\n                            {resume.summary.map((item, idx) => (\n                                <Typography gutterBottom key={idx} variant=\"body1\" component=\"li\">\n                                    {/*`${icons.summary[idx]} ${item}`*/}\n                                    {item}\n                                </Typography>\n                            ))}\n                        </Grid>\n                        <Hidden only={[\"xs\", \"sm\", \"md\"]}>\n                            <Grid item lg={5}>\n                                <Personality />\n                            </Grid>\n                        </Hidden>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {resume.experience.map((item, idx) => (\n                        <Experience key={idx} experience={item} />\n                    ))}\n                </Grid>\n                <Grid item xs={12} style={{ marginTop: -8 }}>\n                    <Divider />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        {resume.education.map((item, idx) => (\n                            <Grid item key={idx} xs={12}>\n                                <Education education={item} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n                {false && (\n                    <>\n                        <Grid item xs={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\">Hobbies: {resume.hobbies.join(\", \")}.</Typography>\n                        </Grid>\n                    </>\n                )}\n                <Hidden only={[\"xs\", \"sm\"]}>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TagCloud />\n                    </Grid>\n                </Hidden>\n            </Grid>\n        </Paper>\n    );\n}\n","import { Container, CssBaseline } from \"@material-ui/core\";\n\nimport { createMuiTheme, createStyles, makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport data from \"./data.json\";\nimport Profile from \"./Profile\";\nimport theme from \"./theme.json\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        printButton: {\n            backgroundColor: \"whitesmoke\",\n            margin: theme.spacing(1),\n        },\n        printContainer: {\n            marginBottom: theme.spacing(-2),\n            padding: theme.spacing(1, 0, 0, 3),\n        },\n        root: {\n            padding: theme.spacing(3),\n        },\n    })\n);\n\nconst App = function (props) {\n    const classes = useStyles(props);\n\n    return (\n        <ThemeProvider theme={responsiveFontSizes(createMuiTheme(theme))}>\n            <CssBaseline />\n            <Container className={classes.root} maxWidth=\"lg\">\n                <Profile resume={data} />\n            </Container>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}