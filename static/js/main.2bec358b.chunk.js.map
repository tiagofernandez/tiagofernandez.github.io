{"version":3,"sources":["FlagIcon.js","RadarChart.jsx","links.ts","TagCloud.jsx","Contact.tsx","Education.tsx","Experience.tsx","Personality.tsx","Profile.tsx","App.jsx","serviceWorker.ts","index.tsx"],"names":["FlagIconFactory","React","useCssModules","HighchartsMore","Highcharts","skills","category","score","RadarChartView","highcharts","options","chart","height","polar","type","width","title","text","x","xAxis","categories","map","s","labels","style","color","gridLineColor","tickmarkPlacement","lineWidth","yAxis","gridLineInterpolation","max","min","enabled","series","name","data","pointPlacement","plotOptions","tooltip","pointFormatter","value","this","y","console","log","legend","credits","exporting","links","useStyles","makeStyles","theme","createStyles","root","cursor","TagCloudView","props","classes","className","reverse","item","idx","font","fontSizeMapper","word","Math","log2","padding","onWordClick","link","window","open","rotate","random","t","avatar","chartsContainer","spacing","overflow","language","paddingBottom","personality","popover","marginTop","linkIcons","Github","FaGithub","Instapaper","FaNewspaper","LinkedIn","FaLinkedin","PDF","FaFilePdf","Personality","FaUser","Pinboard","FaThumbtack","StackOverflow","FaStackOverflow","Twitter","FaTwitter","ContactView","contact","useState","popoverAnchor","setPopoverAnchor","Grid","container","justify","Hidden","only","Avatar","alt","onMouseEnter","event","currentTarget","src","Popover","anchorEl","anchorOrigin","horizontal","vertical","onClose","Boolean","transformOrigin","direction","Typography","variant","Object","entries","key","Icon","Tooltip","Link","href","target","rel","size","alignItems","languages","level","FlagIcon","code","email","bold","fontWeight","EducationView","education","institution","country","year","parseMonthYear","mmYYYY","separator","indexOf","split","month","Date","parseInt","formatPeriod","period","fromDate","toDate","periodString","join","diffInMonths","differenceInMonths","years","floor","months","duration","formatDuration","format","ExperienceView","experience","xs","Divider","company","location","description","length","gutterBottom","component","md","technologies","Chip","label","onClick","url","traits","edges","trait","palette","secondary","PersonalityView","e1","e2","leftColor","rightColor","ProgressBar","withStyles","bar","backgroundColor","colorPrimary","borderRadius","LinearProgress","textAlign","icons","summary","hobbies","FaLaptop","FaPlane","FaMusic","FaOdnoklassniki","FaBasketballBall","FaFilm","FaTv","FaDice","FaChessKnight","FaBookOpen","ProfileView","resume","forEach","test","since","then","utc1","UTC","getFullYear","getMonth","getDate","utc2","diffInDays","ceil","getDiffInYears","replace","Paper","lg","printButton","margin","printContainer","marginBottom","App","ThemeProvider","responsiveFontSizes","createMuiTheme","CssBaseline","Container","maxWidth","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bec358b.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport FlagIconFactory from \"react-flag-icon-css\";\n\nexport default FlagIconFactory(React, { useCssModules: false });\n","import Highcharts from \"highcharts\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nHighchartsMore(Highcharts);\n\nconst skills = [\n    { category: \"Algorithms\", score: 2.5 },\n    { category: \"Architecture\", score: 4.5 },\n    { category: \"Databases\", score: 3.5 },\n    { category: \"Frameworks\", score: 4.5 },\n    { category: \"Infrastructure\", score: 3.0 },\n    { category: \"Mobile\", score: 2.5 },\n    { category: \"UI/UX\", score: 4.0 },\n    { category: \"Web\", score: 4.5 },\n];\n\nexport default function RadarChartView() {\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={{\n                chart: {\n                    height: 280,\n                    polar: true,\n                    type: \"line\",\n                    width: 360,\n                },\n                title: {\n                    text: null,\n                    x: 0,\n                },\n                xAxis: {\n                    categories: skills.map((s) => s.category),\n                    labels: {\n                        style: {\n                            color: \"#222\",\n                        },\n                    },\n                    gridLineColor: \"#ccc\",\n                    tickmarkPlacement: \"on\",\n                    lineWidth: 0,\n                },\n                yAxis: {\n                    gridLineColor: \"#ccc\",\n                    gridLineInterpolation: \"polygon\",\n                    lineWidth: 0,\n                    max: 5,\n                    min: 0,\n                    labels: {\n                        enabled: false,\n                    },\n                },\n                series: [\n                    {\n                        name: \"Skills\",\n                        data: skills.map((s) => s.score),\n                        pointPlacement: \"on\",\n                    },\n                ],\n                plotOptions: {\n                    series: {\n                        tooltip: {\n                            pointFormatter: function () {\n                                const value = this.y;\n                                console.log(this);\n                                let rank = \"N/A\";\n                                if (value <= 1) {\n                                    rank = \"Learning\";\n                                } else if (value <= 2) {\n                                    rank = \"Beginner\";\n                                } else if (value <= 3) {\n                                    rank = \"Intermediate\";\n                                } else if (value <= 4) {\n                                    rank = \"Advanced\";\n                                } else {\n                                    rank = \"Expert\";\n                                }\n                                return `<b>${rank}</b>`;\n                            },\n                        },\n                    },\n                },\n                legend: {\n                    enabled: false,\n                },\n                tooltip: {\n                    enabled: false,\n                },\n                credits: {\n                    enabled: false,\n                },\n                exporting: {\n                    enabled: false,\n                },\n            }}\n        />\n    );\n}\n","const links: { [key: string]: string } = {\n    \"Amadeus IT Group S.A.\": \"https://www.amadeus.com\",\n    \"Android\": \"https://www.android.com\",\n    \"Ansible\": \"https://ansible.com\",\n    \"Ant\": \"https://ant.apache.org\",\n    \"Atech S/A\": \"https://www.atech.com.br\",\n    \"Audatex GmbH\": \"https://www.audatex.com\",\n    \"AWS\": \"https://aws.amazon.com\",\n    \"Backbone\": \"https://backbonejs.org\",\n    \"Celery\": \"http://www.celeryproject.org\",\n    \"Cypress\": \"https://cypress.io\",\n    \"D3\": \"https://d3js.org\",\n    \"Dotdash Inc.\": \"https://dotdash.com\",\n    \"Django\": \"https://djangoproject.com\",\n    \"Docker\": \"https://docker.com\",\n    \"Drools\": \"https://www.drools.org\",\n    \"EJB\": \"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\",\n    \"Elasticsearch\": \"https://elastic.co/products/elasticsearch\",\n    \"European Innovation Academy S.A.\": \"https://www.inacademy.eu/\",\n    \"Go\": \"https://golang.org/\",\n    \"Gradle\": \"https://gradle.org\",\n    \"Grails\": \"https://grails.org\",\n    \"GraphQL\": \"https://graphql.org\",\n    \"Groovy\": \"https://groovy-lang.org\",\n    \"GWT\": \"https://www.gwtproject.org\",\n    \"Hibernate\": \"https://hibernate.org\",\n    \"Hive\": \"https://hive.apache.org\",\n    \"HP Inc.\": \"https://www8.hp.com/us/en/home.html\",\n    \"iOS\": \"https://developer.apple.com/ios/\",\n    \"Keycloak\": \"https://www.keycloak.org/\",\n    \"Kotlin\": \"https://kotlinlang.org/\",\n    \"Java\": \"https://www.java.com/\",\n    \"JavaScript\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\n    \"JBoss\": \"https://wildfly.org\",\n    \"Jenkins\": \"https://www.jenkins.io\",\n    \"JiBX\": \"http://jibx.sourceforge.net\",\n    \"JRuby\": \"https://www.jruby.org\",\n    \"Jython\": \"https://www.jython.org\",\n    \"Logstash\": \"https://elastic.co/products/logstash\",\n    \"Marionette\": \"https://marionettejs.com\",\n    \"Maven\": \"https://maven.apache.org\",\n    \"Memcached\": \"https://memcached.org\",\n    \"MongoDB\": \"https://mongodb.com\",\n    \"MySQL\": \"https://mysql.com\",\n    \"Node.js\": \"https://nodejs.org\",\n    \"Nginx\": \"https://nginx.com\",\n    \"Objective-C\": \"https://en.wikipedia.org/wiki/Objective-C\",\n    \"OC4J\": \"https://docs.oracle.com/cd/B14099_19/web.1012/b14011/chap1.htm\",\n    \"OpenMap\": \"http://openmap-java.org/\",\n    \"Oracle9i\": \"https://docs.oracle.com/cd/B10501_01/server.920/a96531/ch1_over.htm\",\n    \"Pontifical Catholic University of São Paulo\": \"http://www.pucsp.br/home\",\n    \"PostgreSQL\": \"https://postgresql.org\",\n    \"Play\": \"https://www.playframework.com\",\n    \"Python\": \"https://python.org\",\n    \"Rails\": \"https://rubyonrails.org\",\n    \"React\": \"https://reactjs.org\",\n    \"Redis\": \"https://redis.io\",\n    \"Ruby\": \"https://www.ruby-lang.org\",\n    \"Scala\": \"https://www.scala-lang.org\",\n    \"Sentry\": \"https://sentry.io\",\n    \"Spark\": \"https://spark.apache.org\",\n    \"Spring\": \"https://spring.io\",\n    \"SQL Server\": \"https://www.microsoft.com/en-us/sql-server/sql-server-downloads\",\n    \"State University of Campinas\": \"https://www.unicamp.br/unicamp/\",\n    \"Struts\": \"https://struts.apache.org\",\n    \"Swift\": \"https://swift.org/documentation/\",\n    \"Swing\": \"https://en.wikipedia.org/wiki/Swing_(Java)\",\n    \"Tamino XML Server\": \"https://en.wikipedia.org/wiki/Software_AG\",\n    \"Tomcat\": \"http://tomcat.apache.org\",\n    \"Telefonica S.A.\": \"https://telefonica.com\",\n    \"TypeScript\": \"https://www.typescriptlang.org\",\n    \"VMware Inc.\": \"https://vmware.com\",\n    \"Vue\": \"https://vuejs.org\",\n    \"WebLogic\": \"https://www.oracle.com/middleware/technologies/weblogic.html\",\n};\n\nexport default links;\n","import React from \"react\";\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport WordCloud from \"react-d3-cloud\";\n\nimport links from \"./links\";\n\nconst skills = [\n    // Languages\n    \"Python\",\n    \"JavaScript\",\n    \"Java\",\n    \"Groovy\",\n    \"Go\",\n    \"Kotlin\",\n    \"Swift\",\n    \"Objective-C\",\n    \"Ruby\",\n    \"Scala\",\n\n    // Frameworks\n    \"Django\",\n    \"Spring\",\n    \"React\",\n    \"Vue\",\n    \"Celery\",\n    \"Node.js\",\n    \"GraphQL\",\n    \"Hibernate\",\n    \"Drools\",\n    \"Rails\",\n\n    // Platforms & Tools\n    \"AWS\",\n    \"iOS\",\n    \"Android\",\n    \"Docker\",\n    \"PostgreSQL\",\n    \"MongoDB\",\n    \"MySQL\",\n    \"Redis\",\n    \"Memcached\",\n    \"Jenkins\",\n    \"Cypress\",\n    \"Nginx\",\n    \"Keycloak\",\n    \"Ansible\",\n    \"Gradle\",\n    \"Maven\",\n];\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            \"& text\": {\n                cursor: \"pointer\",\n            },\n        },\n    })\n);\n\nexport default function TagCloudView(props) {\n    const classes = useStyles(props);\n\n    return (\n        <div className={classes.root}>\n            <WordCloud\n                data={skills.reverse().map((item, idx) => {\n                    return {\n                        text: item,\n                        value: idx + 1,\n                    };\n                })}\n                height={300}\n                font=\"Impact\"\n                fontSizeMapper={(word) => Math.log2(word.value) * 8}\n                padding={2}\n                onWordClick={(word) => {\n                    const link = links[word.text];\n                    if (link) {\n                        window.open(link, \"_blank\");\n                    }\n                }}\n                rotate={(word) => ~~(Math.random() * 2) * 90}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Avatar, Grid, Hidden, Link, Popover, Tooltip, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { IconType } from \"react-icons\";\nimport {\n    FaFilePdf,\n    FaGithub,\n    FaLinkedin,\n    FaNewspaper,\n    FaStackOverflow,\n    FaThumbtack,\n    FaTwitter,\n    FaUser,\n} from \"react-icons/fa\";\n\nimport { Contact } from \"./data\";\nimport FlagIcon from \"./FlagIcon\";\nimport RadarChart from \"./RadarChart\";\nimport TagCloud from \"./TagCloud\";\n\nconst useStyles = makeStyles((t: Theme) =>\n    createStyles({\n        avatar: {\n            height: 56,\n            width: 56,\n        },\n        chartsContainer: {\n            padding: t.spacing(1),\n            overflow: \"hidden\",\n        },\n        language: {\n            cursor: \"pointer\",\n            padding: t.spacing(1),\n        },\n        name: {\n            paddingBottom: t.spacing(0.5),\n        },\n        personality: {\n            height: 21,\n            width: 21,\n        },\n        popover: {\n            marginTop: t.spacing(2),\n        },\n    })\n);\n\nconst linkIcons: { [key: string]: IconType } = {\n    Github: FaGithub,\n    Instapaper: FaNewspaper,\n    LinkedIn: FaLinkedin,\n    PDF: FaFilePdf,\n    Personality: FaUser,\n    Pinboard: FaThumbtack,\n    StackOverflow: FaStackOverflow,\n    Twitter: FaTwitter,\n};\n\ninterface Props {\n    contact: Contact;\n}\n\nexport default function ContactView(props: Props) {\n    const classes = useStyles(props);\n    const { contact } = props;\n\n    const [popoverAnchor, setPopoverAnchor] = React.useState(null);\n\n    return (\n        <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item>\n                <Grid container spacing={2}>\n                    <Hidden only={[\"xs\"]}>\n                        <Grid item>\n                            <Avatar\n                                alt={contact.name}\n                                className={classes.avatar}\n                                onMouseEnter={(event: any) => {\n                                    setPopoverAnchor(event.currentTarget);\n                                }}\n                                src=\"/logo.png\"\n                            />\n                            <Popover\n                                anchorEl={popoverAnchor}\n                                anchorOrigin={{\n                                    horizontal: \"left\",\n                                    vertical: \"bottom\",\n                                }}\n                                className={classes.popover}\n                                onClose={() => setPopoverAnchor(null)}\n                                open={Boolean(popoverAnchor)}\n                                transformOrigin={{\n                                    horizontal: \"left\",\n                                    vertical: \"top\",\n                                }}\n                            >\n                                <Grid container className={classes.chartsContainer} spacing={1}>\n                                    <Grid item>\n                                        <RadarChart />\n                                    </Grid>\n                                    <Grid item>\n                                        <TagCloud />\n                                    </Grid>\n                                </Grid>\n                            </Popover>\n                        </Grid>\n                    </Hidden>\n                    <Grid item>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Typography className={classes.name} variant=\"h5\">\n                                    {contact.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container spacing={1}>\n                                    {Object.entries(contact.links).map(([key, value]) => {\n                                        const Icon = linkIcons[key];\n                                        return (\n                                            <Grid item key={key}>\n                                                <Tooltip title={key}>\n                                                    <Link\n                                                        href={value}\n                                                        color=\"textSecondary\"\n                                                        variant=\"body2\"\n                                                        target=\"_blank\"\n                                                        rel=\"noopener\"\n                                                    >\n                                                        <Icon size=\"1.5em\" />\n                                                    </Link>\n                                                </Tooltip>\n                                            </Grid>\n                                        );\n                                    })}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"flex-end\" spacing={1}>\n                    <Grid item>\n                        {contact.languages.map((item) => (\n                            <Tooltip key={item.code} title={item.level}>\n                                <span className={classes.language}>\n                                    <FlagIcon code={item.code} size=\"lg\" />\n                                </span>\n                            </Tooltip>\n                        ))}\n                    </Grid>\n                    <Grid item>\n                        <Link href={`mailto:${contact.email}`} variant=\"body2\" target=\"_blank\" rel=\"noopener\">\n                            {contact.email}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","import { Grid, Link, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { Education } from \"./data\";\nimport links from \"./links\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        bold: {\n            fontWeight: 500,\n        },\n    })\n);\n\ninterface Props {\n    education: Education;\n}\n\nexport default function EducationView(props: Props) {\n    const classes = useStyles(props);\n    const { education } = props;\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <Typography className={classes.bold}>{education.title}</Typography>\n            </Grid>\n            <Grid item>\n                <Typography className={classes.bold}>–</Typography>\n            </Grid>\n            <Grid item>\n                <Link href={links[education.institution]} target=\"_blank\" rel=\"noopener\">\n                    <Typography className={classes.bold}>{education.institution}</Typography>\n                </Link>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"body1\">\n                    {education.country}, {education.year}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n","import { Chip, Divider, Grid, Hidden, Link, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { formatDuration, differenceInMonths } from \"date-fns\";\nimport { Experience } from \"./data\";\nimport links from \"./links\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        bold: {\n            fontWeight: 500,\n        },\n        root: {\n            paddingBottom: theme.spacing(2),\n        },\n    })\n);\n\ninterface Props {\n    experience: Experience;\n}\n\nexport function parseMonthYear(mmYYYY: string, separator: string = \"/\") {\n    if (mmYYYY.indexOf(separator) === -1) {\n        return null;\n    }\n    const [month, year] = mmYYYY.split(separator);\n    return new Date(parseInt(year), parseInt(month), 1);\n}\n\nexport function formatPeriod(period: string[]) {\n    const fromDate = parseMonthYear(period[0]);\n    const toDate = parseMonthYear(period[1]);\n    const periodString = period.join(\" – \");\n\n    if (fromDate && toDate) {\n        const diffInMonths = differenceInMonths(toDate, fromDate);\n        const years = Math.floor(diffInMonths / 12);\n        const months = diffInMonths % 12;\n        const duration = formatDuration({ months, years }, { format: [\"years\", \"months\"] });\n        return `${periodString} • ${duration}`;\n    }\n    return periodString;\n}\n\nexport default function ExperienceView(props: Props) {\n    const classes = useStyles(props);\n    const { experience } = props;\n\n    return (\n        <Grid container className={classes.root} spacing={1}>\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Typography className={classes.bold}>{experience.title}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.bold}>–</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Link href={links[experience.company]} target=\"_blank\" rel=\"noopener\">\n                            <Typography className={classes.bold}>{experience.company}</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{experience.location}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{formatPeriod(experience.period)}</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {experience.description.length > 0 && (\n                <Grid item xs={12}>\n                    {experience.description.map((item, idx) => (\n                        <Typography gutterBottom key={idx} variant=\"body1\" component=\"li\">\n                            {item}\n                        </Typography>\n                    ))}\n                </Grid>\n            )}\n            <Hidden only={[\"xs\"]}>\n                <Grid item md={12}>\n                    <Grid container spacing={1}>\n                        {experience.technologies.map((item, idx) => (\n                            <Grid item key={idx}>\n                                <Chip\n                                    label={item}\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onClick={() => {\n                                        const url = links[item];\n                                        window.open(url, \"_blank\");\n                                    }}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme, withStyles } from \"@material-ui/core/styles\";\n\nconst traits = [\n    {\n        name: \"Mind\",\n        description: \"how we interact with our environment.\",\n        edges: [\n            { label: \"Extraverted\", value: 40 },\n            { label: \"Intraverted\", value: 60 },\n        ],\n        link: \"https://www.16personalities.com/articles/mind-introverted-vs-extraverted\",\n    },\n    {\n        name: \"Energy\",\n        description: \"where we direct our mental energy.\",\n        edges: [\n            { label: \"Intuitive\", value: 39 },\n            { label: \"Observant\", value: 61 },\n        ],\n        link: \"https://www.16personalities.com/articles/energy-intuitive-vs-observant\",\n    },\n    {\n        name: \"Nature\",\n        description: \"how we make decisions and cope with emotions.\",\n        edges: [\n            { label: \"Thinking\", value: 61 },\n            { label: \"Feeling\", value: 39 },\n        ],\n        link: \"https://www.16personalities.com/articles/nature-thinking-vs-feeling\",\n    },\n    {\n        name: \"Tactics\",\n        description: \"our approach to work, planning and decision-making.\",\n        edges: [\n            { label: \"Judging\", value: 74 },\n            { label: \"Prospecting\", value: 26 },\n        ],\n        link: \"https://www.16personalities.com/articles/tactics-judging-vs-prospecting\",\n    },\n    {\n        name: \"Identity\",\n        description: \"how confident we are in our abilities and decisions.\",\n        edges: [\n            { label: \"Assertive\", value: 81 },\n            { label: \"Turbulent\", value: 19 },\n        ],\n        link: \"https://www.16personalities.com/articles/identity-assertive-vs-turbulent\",\n    },\n];\n\nconst useStyles = makeStyles((t: Theme) =>\n    createStyles({\n        trait: {\n            color: t.palette.text.secondary,\n            paddingBottom: t.spacing(0.25),\n        },\n    })\n);\n\ninterface Props {}\n\nexport default function PersonalityView(props: Props) {\n    const classes = useStyles(props);\n\n    return (\n        <div>\n            {traits.map(({ description, edges, link, name }, idx) => {\n                const [e1, e2] = edges;\n                let [leftColor, rightColor] = [\"#f0f0f0\", \"#008adb\"];\n\n                if (e1.value > e2.value) {\n                    [leftColor, rightColor] = [rightColor, leftColor];\n                }\n                const ProgressBar = withStyles((t: Theme) => {\n                    return createStyles({\n                        bar: {\n                            backgroundColor: leftColor,\n                        },\n                        colorPrimary: {\n                            backgroundColor: rightColor,\n                        },\n                        root: {\n                            borderRadius: t.spacing(2.5),\n                            height: 20,\n                        },\n                    });\n                })(LinearProgress);\n\n                return (\n                    <Grid key={idx} container className={classes.trait} spacing={2}>\n                        <Grid item xs={3} style={{ textAlign: \"right\" }}>\n                            {edges[0].label} {e1.value}%\n                        </Grid>\n                        <Grid item xs={6} style={{ cursor: \"pointer\" }} onClick={() => window.open(link, \"_blank\")}>\n                            <Tooltip title={`${name}: ${description}`}>\n                                <ProgressBar variant=\"determinate\" value={e1.value} />\n                            </Tooltip>\n                        </Grid>\n                        <Grid item xs={3}>\n                            {e2.value}% {edges[1].label}\n                        </Grid>\n                    </Grid>\n                );\n            })}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Divider, Grid, Hidden, Paper, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport {\n    FaBasketballBall,\n    FaBookOpen,\n    FaChessKnight,\n    FaDice,\n    FaFilm,\n    FaLaptop,\n    FaMusic,\n    FaOdnoklassniki,\n    FaPlane,\n    FaTv,\n} from \"react-icons/fa\";\n\nimport { Resume } from \"./data\";\n\nimport Contact from \"./Contact\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport Personality from \"./Personality\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: theme.spacing(3),\n        },\n    })\n);\n\nconst icons = {\n    summary: [\"👨🏻‍✈️\", \"👷🏻‍♂️\", \"🧙🏻‍♂️\", \"👨🏻‍🎨\", \"👨🏻‍💻\"],\n    hobbies: [\n        FaLaptop,\n        FaPlane,\n        FaMusic,\n        FaOdnoklassniki,\n        FaBasketballBall,\n        FaFilm,\n        FaTv,\n        FaDice,\n        FaChessKnight,\n        FaBookOpen,\n    ],\n};\n\ninterface Props {\n    resume: Resume;\n}\n\nconst DT_STARTED_CAREER = \"2003-01-01\";\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nfunction getDiffInYears(since: Date, then?: Date) {\n    then = then || new Date();\n    const utc1 = Date.UTC(since.getFullYear(), since.getMonth(), since.getDate());\n    const utc2 = Date.UTC(then.getFullYear(), then.getMonth(), then.getDate());\n    const diffInDays = Math.floor((utc2 - utc1) / MS_PER_DAY);\n    return Math.ceil(diffInDays / 365);\n}\n\nexport default function ProfileView(props: Props) {\n    const classes = useStyles(props);\n    const displayHobbies = false;\n\n    const { resume } = props;\n\n    resume.summary.forEach((item, idx) => {\n        if (/N\\+/.test(item)) {\n            const years = getDiffInYears(new Date(DT_STARTED_CAREER));\n            resume.summary[idx] = item.replace(\"N+\", `${years}+`);\n        }\n    });\n    return (\n        <Paper className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Contact contact={resume.contact} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container justify=\"space-between\" spacing={2}>\n                        <Grid item lg={7}>\n                            {resume.summary.map((item, idx) => (\n                                <Typography\n                                    gutterBottom\n                                    key={idx}\n                                    variant=\"body1\"\n                                >{`${icons.summary[idx]} ${item}`}</Typography>\n                            ))}\n                        </Grid>\n                        <Hidden only={[\"xs\", \"sm\", \"md\"]}>\n                            <Grid item lg={5}>\n                                <Personality />\n                            </Grid>\n                        </Hidden>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {resume.experience.map((item, idx) => (\n                        <Experience key={idx} experience={item} />\n                    ))}\n                </Grid>\n                <Grid item xs={12} style={{ marginTop: -8 }}>\n                    <Divider />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        {resume.education.map((item, idx) => (\n                            <Grid item key={idx} xs={12}>\n                                <Education education={item} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n                {displayHobbies && (\n                    <Hidden only={[\"xs\"]}>\n                        <Grid item sm={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item sm={12}>\n                            <Grid container spacing={2}>\n                                {resume.hobbies.map((item, idx) => {\n                                    const Icon = icons.hobbies[idx];\n                                    return (\n                                        <Grid item key={idx}>\n                                            <Grid container spacing={1}>\n                                                <Grid item>\n                                                    <Icon size=\"1.2rem\" />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Typography variant=\"caption\">{item}</Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    );\n                                })}\n                            </Grid>\n                        </Grid>\n                    </Hidden>\n                )}\n            </Grid>\n        </Paper>\n    );\n}\n","import { Container, CssBaseline } from \"@material-ui/core\";\n\nimport { createMuiTheme, createStyles, makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport data from \"./data.json\";\nimport Profile from \"./Profile\";\nimport theme from \"./theme.json\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        printButton: {\n            backgroundColor: \"whitesmoke\",\n            margin: theme.spacing(1),\n        },\n        printContainer: {\n            marginBottom: theme.spacing(-2),\n            padding: theme.spacing(1, 0, 0, 3),\n        },\n        root: {\n            padding: theme.spacing(3),\n        },\n    })\n);\n\nconst App = function (props) {\n    const classes = useStyles(props);\n\n    return (\n        <ThemeProvider theme={responsiveFontSizes(createMuiTheme(theme))}>\n            <CssBaseline />\n            <Container className={classes.root} maxWidth=\"lg\">\n                <Profile resume={data} />\n            </Container>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}