{"version":3,"sources":["FlagIcon.js","Contact.tsx","links.ts","Education.tsx","Experience.tsx","RadarChart.jsx","Roles.tsx","TagCloud.jsx","Profile.tsx","App.jsx","serviceWorker.ts","index.tsx"],"names":["FlagIconFactory","React","useCssModules","useStyles","makeStyles","theme","createStyles","avatar","height","width","language","cursor","padding","spacing","personality","linkIcons","Github","FaGithub","Instapaper","FaNewspaper","LinkedIn","FaLinkedin","Personality","FaSkull","Pinboard","FaThumbtack","StackOverflow","FaStackOverflow","Twitter","FaTwitter","props","classes","contact","Grid","container","justify","item","Hidden","only","Avatar","alt","name","src","className","direction","Typography","variant","Object","entries","links","map","key","value","Icon","Tooltip","title","Link","href","color","target","rel","size","alignItems","languages","code","level","FlagIcon","email","Android","Ansible","Ant","AWS","Backbone","Celery","Cypress","D3","Django","Docker","Drools","EJB","Elasticsearch","Gradle","Grails","GraphQL","Groovy","GWT","Hibernate","Hive","iOS","Java","JavaScript","JBoss","JiBX","JRuby","Jython","Logstash","Marionette","Maven","Memcached","MongoDB","MySQL","Nginx","OC4J","OpenMap","Oracle9i","PostgreSQL","Play","Python","Rails","Redis","Ruby","Scala","Sentry","Spark","Spring","Struts","Swing","Tomcat","TypeScript","Vue","WebLogic","bold","fontWeight","education","emoji","institution","country","year","root","paddingBottom","experience","xs","Divider","company","location","period","join","description","idx","gutterBottom","component","md","technologies","Chip","label","onClick","url","window","open","HighchartsMore","Highcharts","highcharts","options","chart","polar","type","text","x","xAxis","categories","labels","style","gridLineColor","tickmarkPlacement","lineWidth","yAxis","gridLineInterpolation","max","min","enabled","series","data","pointPlacement","pane","plotOptions","tooltip","pointFormatter","this","y","legend","credits","exporting","circle","paddingLeft","textAlign","emptyCircle","fill","score","maxWidth","solidCircle","range","1","2","3","4","5","roles","Array","from","_","skills","reverse","font","fontSizeMapper","word","Math","log2","onWordClick","link","rotate","random","icons","summary","hobbies","FaLaptop","FaPlane","FaMusic","FaOdnoklassniki","FaBasketballBall","FaFilm","FaTv","FaDice","FaChessKnight","FaBookOpen","MS_PER_DAY","printing","resume","forEach","test","years","since","then","Date","utc1","UTC","getFullYear","getMonth","getDate","utc2","diffInDays","floor","ceil","getDiffInYears","replace","Paper","Contact","Roles","Experience","Education","sm","lg","TagCloud","RadarChart","printButton","backgroundColor","margin","printContainer","marginBottom","browser","Bowser","getParser","navigator","userAgent","console","log","App","useState","setPrinting","rootRef","useRef","getBrowserName","trigger","Container","Button","startIcon","content","current","onBeforeGetContent","onAfterPrint","ref","ThemeProvider","responsiveFontSizes","createMuiTheme","CssBaseline","Profile","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28931c50.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport FlagIconFactory from \"react-flag-icon-css\";\n\nexport default FlagIconFactory(React, { useCssModules: false });\n","import React from \"react\";\n\nimport { Avatar, Grid, Hidden, Link, Tooltip, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { IconType } from \"react-icons\";\nimport { FaGithub, FaLinkedin, FaNewspaper, FaStackOverflow, FaSkull, FaThumbtack, FaTwitter } from \"react-icons/fa\";\n\nimport { Contact } from \"./data\";\nimport FlagIcon from \"./FlagIcon\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        avatar: {\n            height: 56,\n            width: 56,\n        },\n        language: {\n            cursor: \"pointer\",\n            padding: theme.spacing(1),\n        },\n        personality: {\n            height: 21,\n            width: 21,\n        },\n    })\n);\n\nconst linkIcons: { [key: string]: IconType } = {\n    Github: FaGithub,\n    Instapaper: FaNewspaper,\n    LinkedIn: FaLinkedin,\n    Personality: FaSkull,\n    Pinboard: FaThumbtack,\n    StackOverflow: FaStackOverflow,\n    Twitter: FaTwitter,\n};\n\ninterface Props {\n    contact: Contact;\n}\n\nexport default function(props: Props) {\n    const classes = useStyles(props);\n    const { contact } = props;\n\n    return (\n        <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item>\n                <Grid container spacing={2}>\n                    <Hidden only={[\"xs\"]}>\n                        <Grid item>\n                            <Avatar alt={contact.name} src=\"/logo.png\" className={classes.avatar} />\n                        </Grid>\n                    </Hidden>\n                    <Grid item>\n                        <Grid container direction=\"column\">\n                            <Grid item>\n                                <Typography variant=\"h5\">{contact.name}</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container spacing={1}>\n                                    {Object.entries(contact.links).map(([key, value]) => {\n                                        const Icon = linkIcons[key];\n                                        return (\n                                            <Grid item key={key}>\n                                                <Tooltip title={key}>\n                                                    <Link\n                                                        href={value}\n                                                        color=\"textSecondary\"\n                                                        variant=\"body2\"\n                                                        target=\"_blank\"\n                                                        rel=\"noopener\"\n                                                    >\n                                                        <Icon size=\"1.5em\" />\n                                                    </Link>\n                                                </Tooltip>\n                                            </Grid>\n                                        );\n                                    })}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"flex-end\" spacing={1}>\n                    <Grid item>\n                        {contact.languages.map(item => (\n                            <Tooltip key={item.code} title={item.level}>\n                                <span className={classes.language}>\n                                    <FlagIcon code={item.code} size=\"lg\" />\n                                </span>\n                            </Tooltip>\n                        ))}\n                    </Grid>\n                    <Grid item>\n                        <Link href={`mailto:${contact.email}`} variant=\"body2\" target=\"_blank\" rel=\"noopener\">\n                            {contact.email}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n","const links: { [key: string]: string } = {\n    \"Amadeus IT Group S.A.\": \"https://www.amadeus.com\",\n    Android: \"https://www.android.com\",\n    Ansible: \"https://ansible.com\",\n    Ant: \"https://ant.apache.org\",\n    \"Atech S/A\": \"https://www.atech.com.br\",\n    \"Audatex GmbH\": \"https://www.audatex.com\",\n    AWS: \"https://aws.amazon.com\",\n    Backbone: \"https://backbonejs.org\",\n    Celery: \"http://www.celeryproject.org\",\n    Cypress: \"https://cypress.io\",\n    D3: \"https://d3js.org\",\n    \"Dotdash Inc.\": \"https://dotdash.com\",\n    Django: \"https://djangoproject.com\",\n    Docker: \"https://docker.com\",\n    Drools: \"https://www.drools.org\",\n    EJB: \"https://en.wikipedia.org/wiki/Enterprise_JavaBeans\",\n    Elasticsearch: \"https://elastic.co/products/elasticsearch\",\n    \"European Innovation Academy S.A.\": \"https://www.inacademy.eu/\",\n    Gradle: \"https://gradle.org\",\n    Grails: \"https://grails.org\",\n    GraphQL: \"https://graphql.org\",\n    Groovy: \"https://groovy-lang.org\",\n    GWT: \"https://www.gwtproject.org\",\n    Hibernate: \"https://hibernate.org\",\n    Hive: \"https://hive.apache.org\",\n    \"HP Inc.\": \"https://www8.hp.com/us/en/home.html\",\n    iOS: \"https://developer.apple.com/ios/\",\n    Java: \"https://www.java.com/\",\n    JavaScript: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\n    JBoss: \"https://wildfly.org\",\n    JiBX: \"http://jibx.sourceforge.net\",\n    JRuby: \"https://www.jruby.org\",\n    Jython: \"https://www.jython.org\",\n    Logstash: \"https://elastic.co/products/logstash\",\n    \"Material Design\": \"https://material.io\",\n    Marionette: \"https://marionettejs.com\",\n    Maven: \"https://maven.apache.org\",\n    Memcached: \"https://memcached.org\",\n    MongoDB: \"https://mongodb.com\",\n    MySQL: \"https://mysql.com\",\n    \"Node.js\": \"https://nodejs.org\",\n    Nginx: \"https://nginx.com\",\n    \"Objective-C\": \"https://en.wikipedia.org/wiki/Objective-C\",\n    OC4J: \"https://docs.oracle.com/cd/B14099_19/web.1012/b14011/chap1.htm\",\n    OpenMap: \"http://openmap-java.org/\",\n    Oracle9i: \"https://docs.oracle.com/cd/B10501_01/server.920/a96531/ch1_over.htm\",\n    \"Pontifical Catholic University of São Paulo\": \"http://www.pucsp.br/home\",\n    PostgreSQL: \"https://postgresql.org\",\n    Play: \"https://www.playframework.com\",\n    Python: \"https://python.org\",\n    Rails: \"https://rubyonrails.org\",\n    React: \"https://reactjs.org\",\n    Redis: \"https://redis.io\",\n    Ruby: \"https://www.ruby-lang.org\",\n    Scala: \"https://www.scala-lang.org\",\n    Sentry: \"https://sentry.io\",\n    Spark: \"https://spark.apache.org\",\n    Spring: \"https://spring.io\",\n    \"SQL Server\": \"https://www.microsoft.com/en-us/sql-server/sql-server-downloads\",\n    \"State University of Campinas\": \"https://www.unicamp.br/unicamp/\",\n    Struts: \"https://struts.apache.org\",\n    Swing: \"https://en.wikipedia.org/wiki/Swing_(Java)\",\n    \"Tamino XML Server\": \"https://en.wikipedia.org/wiki/Software_AG\",\n    Tomcat: \"http://tomcat.apache.org\",\n    \"Telefonica S.A.\": \"https://telefonica.com\",\n    TypeScript: \"https://www.typescriptlang.org\",\n    Vue: \"https://vuejs.org\",\n    WebLogic: \"https://www.oracle.com/middleware/technologies/weblogic.html\",\n};\n\nexport default links;\n","import React from \"react\";\n\nimport { Grid, Link, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { Education } from \"./data\";\nimport links from \"./links\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        bold: {\n            fontWeight: 500,\n        },\n    })\n);\n\ninterface Props {\n    education: Education;\n    emoji: string;\n}\n\nexport default function(props: Props) {\n    const classes = useStyles(props);\n    const { education, emoji } = props;\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item>\n                <Typography className={classes.bold}>{`${emoji} ${education.title}`}</Typography>\n            </Grid>\n            <Grid item>\n                <Typography className={classes.bold}>–</Typography>\n            </Grid>\n            <Grid item>\n                <Link href={links[education.institution]} target=\"_blank\" rel=\"noopener\">\n                    <Typography className={classes.bold}>{education.institution}</Typography>\n                </Link>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"body1\">\n                    {education.country}, {education.year}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\n\nimport { Chip, Divider, Grid, Hidden, Link, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { Experience } from \"./data\";\nimport links from \"./links\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        bold: {\n            fontWeight: 500,\n        },\n        root: {\n            paddingBottom: theme.spacing(2),\n        },\n    })\n);\n\ninterface Props {\n    experience: Experience;\n    emoji: string;\n}\n\nexport default function(props: Props) {\n    const classes = useStyles(props);\n    const { experience, emoji } = props;\n\n    return (\n        <Grid container className={classes.root} spacing={1}>\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Typography className={classes.bold}>{`${emoji} ${experience.title}`}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.bold}>–</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Link href={links[experience.company]} target=\"_blank\" rel=\"noopener\">\n                            <Typography className={classes.bold}>{experience.company}</Typography>\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{experience.location}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{experience.period.join(\" – \")}</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                {experience.description.map((item, idx) => (\n                    <Typography gutterBottom key={idx} variant=\"body1\" component=\"li\">\n                        {item}\n                    </Typography>\n                ))}\n            </Grid>\n            <Hidden only={[\"xs\"]}>\n                <Grid item md={12}>\n                    <Grid container spacing={1}>\n                        {experience.technologies.map((item, idx) => (\n                            <Grid item key={idx}>\n                                <Chip\n                                    label={item}\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onClick={() => {\n                                        const url = links[item];\n                                        window.open(url, \"_blank\");\n                                    }}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n}\n","import React from \"react\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsMore from \"highcharts/highcharts-more\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nHighchartsMore(Highcharts);\n\nexport default function() {\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={{\n                chart: {\n                    polar: true,\n                    type: \"line\",\n                },\n                title: {\n                    text: null,\n                    x: 0,\n                },\n                xAxis: {\n                    categories: [\n                        \"Algorithms\",\n                        \"APIs\",\n                        \"Architecture\",\n                        \"Databases\",\n                        \"Design patterns\",\n                        \"Frameworks\",\n                        \"Infrastructure\",\n                        \"Programming Languages\",\n                        \"Mobile development\",\n                        \"Security\",\n                        \"UI/UX design\",\n                        \"Web development\",\n                    ],\n                    labels: {\n                        style: {\n                            color: \"#222\",\n                        },\n                    },\n                    gridLineColor: \"#ccc\",\n                    tickmarkPlacement: \"on\",\n                    lineWidth: 0,\n                },\n                yAxis: {\n                    gridLineColor: \"#ccc\",\n                    gridLineInterpolation: \"polygon\",\n                    lineWidth: 0,\n                    max: 5,\n                    min: 0,\n                    labels: {\n                        enabled: false,\n                    },\n                },\n                series: [\n                    {\n                        name: \"Skills\",\n                        data: [\n                            3.0, // Algorithms\n                            4.5, // APIs\n                            4.5, // Architecture\n                            3.0, // Databases\n                            4.0, // Design patterns\n                            4.5, // Frameworks\n                            3.5, // Infrastructure\n                            4.5, // Languages\n                            2.5, // Mobile development\n                            3.5, // Security\n                            4.5, // UI/UX design\n                            4.5, // Web development\n                        ],\n                        pointPlacement: \"on\",\n                    },\n                ],\n                pane: {\n                    size: \"75%\",\n                },\n                plotOptions: {\n                    series: {\n                        tooltip: {\n                            pointFormatter: function() {\n                                const value = this.y;\n                                let rank = \"N/A\";\n                                if (value <= 1) {\n                                    rank = \"Novice\";\n                                } else if (value <= 2) {\n                                    rank = \"Beginner\";\n                                } else if (value <= 3) {\n                                    rank = \"Intermediate\";\n                                } else if (value <= 4) {\n                                    rank = \"Advanced\";\n                                } else {\n                                    rank = \"Expert\";\n                                }\n                                return `<b>${rank}</b>`;\n                            },\n                        },\n                    },\n                },\n                legend: {\n                    enabled: false,\n                },\n                credits: {\n                    enabled: false,\n                },\n                exporting: {\n                    enabled: false,\n                },\n            }}\n        />\n    );\n}\n","import React from \"react\";\n\nimport { Grid, Tooltip, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { FaCircle } from \"react-icons/fa\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        circle: {\n            paddingLeft: theme.spacing(1),\n        },\n        description: {\n            \"& span\": {\n                fontWeight: 500,\n            },\n            textAlign: \"right\",\n            width: 140,\n        },\n        emptyCircle: {\n            fill: \"lightgray\",\n        },\n        score: {\n            maxWidth: 130,\n        },\n        solidCircle: {\n            fill: \"#0377BD\",\n        },\n    })\n);\n\ninterface Role {\n    description: string;\n    score: number;\n}\n\ninterface Props {\n    roles: Array<Role>;\n}\n\nconst range: any = {\n    1: \"< 2 years\",\n    2: \"2-4 years\",\n    3: \"4-8 years\",\n    4: \"8-10 years\",\n    5: \"10+ years\",\n};\n\nexport default function(props: Props) {\n    const classes = useStyles(props);\n    const { roles } = props;\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"flex-end\" spacing={1}>\n            {roles.map((item: Role, idx: number) => (\n                <Grid item key={idx}>\n                    <Grid container spacing={2}>\n                        <Grid item className={classes.description}>\n                            <Typography variant=\"caption\">{item.description}</Typography>\n                        </Grid>\n                        <Grid item className={classes.score}>\n                            {Array.from(Array(item.score), (_, idx) => (\n                                <Tooltip key={idx} title={range[idx + 1]}>\n                                    <span className={classes.circle}>\n                                        <FaCircle className={classes.solidCircle} />\n                                    </span>\n                                </Tooltip>\n                            ))}\n                            {Array.from(Array(5 - item.score), (_, idx) => (\n                                <span key={idx} className={classes.circle}>\n                                    <FaCircle className={classes.emptyCircle} />\n                                </span>\n                            ))}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n","import React from \"react\";\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport WordCloud from \"react-d3-cloud\";\n\nimport links from \"./links\";\n\nconst skills = [\n    \"Python\",\n    \"JavaScript\",\n    \"React\",\n    \"Django\",\n    \"Celery\",\n    \"Material Design\",\n    \"Docker\",\n    \"Memcached\",\n    \"Cypress\",\n    \"PostgreSQL\",\n    \"AWS\",\n    \"Redis\",\n    \"Groovy\",\n    \"Java\",\n    \"Vue\",\n    \"Node.js\",\n    \"TypeScript\",\n    \"GraphQL\",\n    \"Objective-C\",\n    \"iOS\",\n    \"Android\",\n    \"Ruby\",\n    \"Rails\",\n    \"Grails\",\n    \"Scala\",\n    \"Spring\",\n    \"Hibernate\",\n    \"Drools\",\n    \"D3\",\n    \"Nginx\",\n    \"MongoDB\",\n    \"Elasticsearch\",\n    \"MySQL\",\n    \"Spark\",\n    \"Logstash\",\n    \"Ansible\",\n    \"Maven\",\n    \"Gradle\",\n    \"Ant\",\n    \"Sentry\",\n];\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            \"& text\": {\n                cursor: \"pointer\",\n            },\n        },\n    })\n);\n\nexport default function(props) {\n    const classes = useStyles(props);\n\n    return (\n        <div className={classes.root}>\n            <WordCloud\n                data={skills.reverse().map((item, idx) => {\n                    return {\n                        text: item,\n                        value: idx + 1,\n                    };\n                })}\n                height={400}\n                font=\"Impact\"\n                fontSizeMapper={word => Math.log2(word.value) * 8}\n                padding={2}\n                onWordClick={word => {\n                    const link = links[word.text];\n                    if (link) {\n                        window.open(link, \"_blank\");\n                    }\n                }}\n                rotate={word => ~~(Math.random() * 2) * 90}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Divider, Grid, Hidden, Paper, Typography } from \"@material-ui/core\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport {\n    FaBasketballBall,\n    FaBookOpen,\n    FaChessKnight,\n    FaDice,\n    FaFilm,\n    FaLaptop,\n    FaMusic,\n    FaOdnoklassniki,\n    FaPlane,\n    FaTv,\n} from \"react-icons/fa\";\n\nimport { Resume } from \"./data\";\n\nimport Contact from \"./Contact\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport RadarChart from \"./RadarChart\";\nimport Roles from \"./Roles\";\nimport TagCloud from \"./TagCloud\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            padding: theme.spacing(3),\n        },\n    })\n);\n\nconst icons = {\n    summary: [\"👨🏻‍✈️\", \"👷🏻‍♂️\", \"🧙🏻‍♂️\", \"👨🏻‍🎨\", \"👨🏻‍💻\"],\n    experience: [\"🔍\", \"📊\", \"🏆\", \"📚\", \"🏛\", \"🧰\", \"🌐\", \"🖥\"],\n    education: [\"🎓\", \"🎓\"],\n    hobbies: [\n        FaLaptop,\n        FaPlane,\n        FaMusic,\n        FaOdnoklassniki,\n        FaBasketballBall,\n        FaFilm,\n        FaTv,\n        FaDice,\n        FaChessKnight,\n        FaBookOpen,\n    ],\n};\n\ninterface Props {\n    printing: boolean;\n    resume: Resume;\n}\n\nconst DT_STARTED_CAREER = \"2003-01-01\";\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nfunction getDiffInYears(since: Date, then?: Date) {\n    then = then || new Date();\n    const utc1 = Date.UTC(since.getFullYear(), since.getMonth(), since.getDate());\n    const utc2 = Date.UTC(then.getFullYear(), then.getMonth(), then.getDate());\n    const diffInDays = Math.floor((utc2 - utc1) / MS_PER_DAY);\n    return Math.ceil(diffInDays / 365);\n}\n\nexport default function(props: Props) {\n    const classes = useStyles(props);\n    const { printing, resume } = props;\n\n    resume.summary.forEach((item, idx) => {\n        if (/N\\+/.test(item)) {\n            const years = getDiffInYears(new Date(DT_STARTED_CAREER));\n            resume.summary[idx] = item.replace(\"N+\", `${years}+`);\n        }\n    });\n\n    return (\n        <Paper className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Contact contact={resume.contact} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container justify=\"space-between\" spacing={2}>\n                        <Grid item>\n                            {resume.summary.map((item, idx) => (\n                                <Typography\n                                    gutterBottom\n                                    key={idx}\n                                    variant=\"body1\"\n                                >{`${icons.summary[idx]} ${item}`}</Typography>\n                            ))}\n                        </Grid>\n                        <Grid item>\n                            <Roles\n                                roles={[\n                                    { description: \"Engineering Manager\", score: 2 },\n                                    { description: \"Software Architect\", score: 4 },\n                                    { description: \"Full-stack Engineer\", score: 5 },\n                                    { description: \"Mobile Developer\", score: 1 },\n                                    { description: \"IT Mentor\", score: 2 },\n                                ]}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {resume.experience.map((item, idx) => (\n                        <Experience key={idx} experience={item} emoji={icons.experience[idx]} />\n                    ))}\n                </Grid>\n                <Grid item xs={12}>\n                    <Divider />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={1}>\n                        {resume.education.map((item, idx) => (\n                            <Grid item key={idx} xs={12}>\n                                <Education education={item} emoji={icons.education[idx]} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n                {!printing && (\n                    <Hidden only={[\"xs\"]}>\n                        <Grid item sm={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item sm={12}>\n                            <Grid container justify=\"space-between\">\n                                <Grid item sm={12} lg={7}>\n                                    <TagCloud />\n                                </Grid>\n                                <Grid item sm={12} lg={5}>\n                                    <RadarChart />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sm={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item sm={12}>\n                            <Grid container spacing={2}>\n                                {resume.hobbies.map((item, idx) => {\n                                    const Icon = icons.hobbies[idx];\n                                    return (\n                                        <Grid item key={idx}>\n                                            <Grid container spacing={1}>\n                                                <Grid item>\n                                                    <Icon size=\"1.2rem\" />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Typography variant=\"caption\">{item}</Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    );\n                                })}\n                            </Grid>\n                        </Grid>\n                    </Hidden>\n                )}\n            </Grid>\n        </Paper>\n    );\n}\n","import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\n\nimport Bowser from \"bowser\";\n\nimport { Button, Container, CssBaseline, Hidden } from \"@material-ui/core\";\n\nimport { createMuiTheme, createStyles, makeStyles, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\n\nimport data from \"./data.json\";\nimport Profile from \"./Profile\";\nimport theme from \"./theme.json\";\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        printButton: {\n            backgroundColor: \"whitesmoke\",\n            margin: theme.spacing(1),\n        },\n        printContainer: {\n            marginBottom: theme.spacing(-2),\n            padding: theme.spacing(1, 0, 0, 3),\n        },\n        root: {\n            padding: theme.spacing(3),\n        },\n    })\n);\n\nconst browser = Bowser.getParser(window.navigator.userAgent);\nconsole.log(\"Browser\", browser);\n\nconst App = function(props) {\n    const classes = useStyles(props);\n\n    const [printing, setPrinting] = React.useState(false);\n    const rootRef = React.useRef();\n\n    return (\n        <>\n            {/chrome/i.test(browser.getBrowserName()) && (\n                <ReactToPrint\n                    trigger={() => (\n                        <Container className={classes.printContainer} maxWidth=\"lg\">\n                            <Hidden only={[\"xs\"]}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    className={classes.printButton}\n                                    startIcon={<PrintIcon />}\n                                >\n                                    Print\n                                </Button>\n                            </Hidden>\n                        </Container>\n                    )}\n                    content={() => rootRef.current}\n                    onBeforeGetContent={() => {\n                        setPrinting(true);\n                    }}\n                    onAfterPrint={() => {\n                        setPrinting(false);\n                    }}\n                />\n            )}\n            <div ref={rootRef}>\n                <ThemeProvider theme={responsiveFontSizes(createMuiTheme(theme))}>\n                    <CssBaseline />\n                    <Container className={classes.root} maxWidth=\"lg\">\n                        <Profile printing={printing} resume={data} />\n                    </Container>\n                </ThemeProvider>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}